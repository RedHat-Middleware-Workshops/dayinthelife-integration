---
- name: Make sure we go back to default project
  shell: "oc project default"

- name: Create the 3scale app
  shell: "oc new-app -f https://raw.githubusercontent.com/jbossdemocentral/3scale-api-workshop/master/support/templates/amp-template.yml \
  --param WILDCARD_DOMAIN={{ ocp_apps_domain }} --param ADMIN_PASSWORD=password --param WILDCARD_POLICY=Subdomain \
  --param ADMIN_ACCESS_TOKEN={{threescale_admin_access_token}} --param MASTER_PASSWORD=password --param MASTER_ACCESS_TOKEN={{threescale_master_access_token}} -n {{ namespace }}"
  when: configure_only == 'false'

- name: Wait until 3scale API is available 
  uri: 
    url: https://master.{{ ocp_apps_domain }}
    method: HEAD
    validate_certs: no
  register: wait_threescale_result
  until: wait_threescale_result is succeeded
  ignore_errors: yes
  retries: 10
  delay: 60
  when: create_tenants

- name: Create tenants
  include_tasks: ./create-tenants.yml
  with_sequence: start=1 end={{ usersno }} format=evals%02d
  when: create_tenants

- name: Create apikey service
  include_tasks: ./create-service.yml
  vars:
    admintoken: '{{threescale_admin_access_token}}'
    account_id: '3'
    name: 'Location API'
    backend_version: '1'
    configure_only: '{{no_threescale_services}}'
    system_name: '{{ 999999999999999999999 | random | to_uuid | hash("md5") }}'
    proxy_config: 
      production_endpoint: 'https://location-api.amp.{{ ocp_apps_domain }}:443'
      staging_endpoint: 'https://location-api-staging.amp.{{ ocp_apps_domain }}:443'
      backend_endpoint: 'http://location-service-{{ backend_project }}.{{ ocp_apps_domain }}:80'
    application_plan:
      name: 'Simple'
      system_name: 'simple'
    app_config:
      id: 'www-app'
      name: 'Webapp'
      description: 'Simple WebApp'

- name: Get SSO Token Longer Lifespan
  shell: "curl --insecure -X POST 'https://sso-{{sso_project}}.{{ocp_apps_domain}}/auth/realms/master/protocol/openid-connect/token' \
  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username={{ eval_rhsso_admin_username | default('keyadmin') }}' -d 'password={{ eval_rhsso_admin_password | default('keypassword') }}' -d 'grant_type=password' -d 'client_id=admin-cli'"
  register: token_text

- set_fact: TKN={{ (token_text.stdout | from_json).access_token }}

- name: Get id for 3scale-client
  shell: "curl --insecure 'https://sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/{{threescale_realm | default('threescale')}}/clients' \
  -H 'Content-Type: application/json' -H 'Authorization: Bearer {{TKN}}'"
  register: clients_text

- set_fact: IdClientAdmin={{ (clients_text.stdout | from_json | json_query(query)) }}
  vars:
    query: "[?clientId=='{{threescale_client_id | default('3scale-admin')}}'] | [0].id"

- debug: var=IdClientAdmin

- name: Get client secret
  shell: "curl --insecure 'https://sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/{{threescale_realm | default('threescale')}}/clients/{{ IdClientAdmin }}/client-secret' \
  -H 'Content-Type: application/json' -H 'Authorization: Bearer {{TKN}}'"
  register: secret_text

- set_fact: client_secret={{ (secret_text.stdout | from_json).value }}

- debug: var=client_secret

- name: Create sso service
  include_tasks: ./create-service.yml
  vars:
    admintoken: '{{ threescale_admin_access_token }}'
    account_id: '3'
    name: 'SSO Location API'
    backend_version: 'oidc'
    system_name: '{{ 999999999999999999998 | random | to_uuid | hash("md5") }}'
    configure_only: '{{no_threescale_services}}'
    proxy_config: 
      production_endpoint: 'https://location-sso.amp.{{ ocp_apps_domain }}:443'
      staging_endpoint: 'https://location-sso-staging.amp.{{ ocp_apps_domain }}:443'
      backend_endpoint: 'http://location-service-{{ backend_project }}.{{ ocp_apps_domain }}:80'
      sso_endpoint: 'https://{{threescale_client_id | default("3scale-admin")}}:{{ client_secret }}@sso-{{ sso_project }}.{{ ocp_apps_domain }}/auth/realms/{{threescale_realm | default("threescale")}}'
    application_plan:
      name: 'Secure'
      system_name: 'secure'
    app_config:
      id: 'www-secured'
      name: 'Secured App'
      description: 'SSO Secured App'
      redirect_uri: 'http://www-{{ backend_project }}.{{ ocp_apps_domain }}/*'

- name: Get id for client 'www-secured'
  uri:
    url: 'https://sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/{{threescale_realm | default("threescale")}}/clients'
    return_content: yes
    headers:
      Authorization: 'Bearer {{TKN}}'
    validate_certs: no
  register: client_text
  until: ("www-secured" in client_text.content)
  retries: 20
  delay: 30

- set_fact: IdClientApp={{ (client_text.content | from_json | json_query(query)) }}
  vars:
    query: "[?clientId=='www-secured'] | [0].id"

- debug: var=IdClientApp

- name: Update the rh sso app
  uri: 
    url: "https://sso-{{sso_project}}.{{ocp_apps_domain}}/auth/admin/realms/{{threescale_realm | default('threescale')}}/clients/{{IdClientApp}}"
    method: PUT
    return_content: yes
    headers:
      Content-Type: "application/json"
      Authorization: 'Bearer {{TKN}}'
    body: '{ "clientId": "www-secured", "publicClient" : "true", "rootUrl": "http://www-{{ backend_project }}.{{ ocp_apps_domain }}", "baseUrl": "/" }'
    body_format: json
    validate_certs: no
    status_code: 204
  register: update_app_result

- debug: var=update_app_result

- include_tasks: create-wildcard-route.yml
  when: create_wildcard_route

- name: Make sure we go back to default project
  shell: "oc project default"
