---
apiVersion: 1.0.0
metadata:
  name: java-jboss-fuse-code
projects:
  - name: java-jboss-fuse
    source:
      location: 'https://github.com/weimeilin79/dayinthelife-import.git'
      type: git
      branch: master
components:
  - id: redhat/java8/latest
    type: chePlugin
  - id: redhat/vscode-apache-camel/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: '8080'
        port: 8080
    memoryLimit: 768Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    image: >-
      registry.redhat.io/codeready-workspaces/plugin-java8-rhel8@sha256:b6e36406e7f8ff86f462f370f55143446ceb0c555b86b13593436f5e71b7cab1
    alias: maven
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
apiVersion: 1.0.0
commands:
  - name: 1. Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/java-jboss-fuse'
        type: exec
        command: MAVEN_OPTS='-Xmx200m' && mvn clean package
        component: maven
  - name: 2. Run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/java-jboss-fuse'
        type: exec
        command: 'mvn spring-boot:run'
        component: maven
  - name: 3. Run in debug mode
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/java-jboss-fuse'
        type: exec
        command: >-
          mvn spring-boot:run -Drun.jvmArguments="-Xdebug
          -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
        component: maven
  - name: 4. Log into deployment cluster
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/java-jboss-fuse'
        type: exec
        command: |
          echo
          echo "Before you can deploy this application to an openshift cluster,"
          echo "you must run 'oc login ...' in the maven terminal."
          echo
        component: maven
  - name: 5. Deploy to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/java-jboss-fuse'
        type: exec
        command: 'mvn fabric8:deploy -Popenshift -DskipTests'
        component: maven
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }
        type: vscode-launch
